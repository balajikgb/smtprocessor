@model ArasPLMWebAp.Models.CreateProcessGroupClass

@using Core.Services
@using Core.Enums
@using ProcessorWebApp.Resources;
@using Microsoft.AspNetCore.Http;
@{
    var env = ViewContext.RouteData.Values[ArasPLMWebAp.Constants.Constants.environmentStr];
}
<style>
    .required::after 
{
    content: "*";
    font-weight: bold;
    color: red; 
}
</style>
<div class="user-reg">
    <div><h4 class="head"></h4></div>
    <form onsubmit="return validate_form()">
        @Html.AntiForgeryToken()
        <br />

         <div class="d-flex form-group align-items-center m-2">
            <label class="control-label required">@OrderResx.Name</label>
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control",id="Txt_Name",@autocomplete="off" } })
        </div>

        <div class="d-flex form-group align-items-center m-2">
            <label class="control-label">@OrderResx.Description</label>
            @Html.TextAreaFor(model => model.description, new { @class = "my-coment form-control",id="Txt_Description",style="height:100px", @autocomplete = "off" })
        </div>

        <div class="d-flex form-group align-items-center m-2">
            <label class="control-label">@OrderResx.Status</label>
            <select id="status" name="status" class="form-control" style="width:150px">
                <option value="1">@OrderResx.Active</option>
                <option value="0">@OrderResx.InActive</option>
            </select>
        </div>
        <div class="d-flex form-group align-items-center m-2">
            @if (Context.Session.GetString("UserRole")==OrderResx.Admin)
            {
            <button onclick="return AddProcessGroupItem(event)" id="ProcessGroupItem" title="Add Process Group Item" class='oot-button smallbtnicon' style="margin-left: 20px;"><i class="fa-sharp fa-solid fa-square-plus"></i></button>
            }
            else 
            {
            <button onclick="return AddProcessGroupItem(event)" id="ProcessGroupItem" title="Add Process Group Item" class='oot-button smallbtnicon oot-button-gray' disabled='disabled' style="margin-left: 20px;"><i class="fa-sharp fa-solid fa-square-plus"></i></button>
            }
        </div>
        <div class="flex-grow-1  oot-border content-width">
            <table id="users-table" class="table table-sm table-bordered table-striped">
                <thead class="table-header-row">
                    <tr class="text-center">
                        <th style="width:80px"> @OrderResx.ProcessIdTitle</th>
                        <th> @OrderResx.RunSequenceId</th>
                        <th> @OrderResx.Status</th>
                        <th> @OrderResx.CreatedDateTitle</th>
                        <th> @OrderResx.CreatedByTitle</th>
                        <th> @OrderResx.Add</th>
                        <th> @OrderResx.EditBatch</th>
                        <th> @OrderResx.DeleteBatch</th>
                    </tr>
                    <tr id='ProcessGroupItemsFilter'>
                        <th><input type="text" class="searchbox-half-input-thead" autocomplete="off" id="@OrderResx.ProcessIdTitle"></th>
                        <th><input type="text" class="searchbox-input-thead" autocomplete="off" id="@OrderResx.RunSequenceId"></th>
                        <th><input type="text" class="searchbox-input-thead" autocomplete="off" id="@OrderResx.Status"></th>
                        <th><input type="text" class="searchbox-input-thead" autocomplete="off" id="@OrderResx.CreatedDateTitle"></th>
                        <th><input type="text" class="searchbox-input-thead" autocomplete="off" id="@OrderResx.CreatedByTitle"></th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody class="table-body-normal"></tbody>
            </table>
        </div>
    </form>
       
        <br><br>


    <div class="d-flex justify-content-left">
        <button class="oot-button m-4" id="back-button" type="button" onclick="BtnBack_Click()">@OrderResx.Back</button>
        <button class="oot-button m-4" type="submit" onclick="return validate_form()">@OrderResx.Ok</button>
    </div>
   
    </div>

@section Scripts
{
    <script>
        var groupid=0;
        var userrole="";
        var process;
        var validate=false;
        var rowid=0;
        $(function () {
            userrole = '@Context.Session.GetString("UserRole")';
            $('#Txt_Name').focus();
            $('#environments').val('@env');
            const params = new URLSearchParams(window.location.search)
            for (const param of params) {
                groupid = param[1].trim();
            }
            if (groupid != 0) {
                $('#ProcessGroupItem').removeClass('oot-button smallbtnicon oot-button-gray');
                $('#ProcessGroupItem').addClass('oot-button smallbtnicon');
                $('#ProcessGroupItem').attr('disabled',false);
                $('#users-table').show();
                $('.head').text("@OrderResx.EditProcessGroup");
                GetProcess();
            }
            else {
                $('#ProcessGroupItem').removeClass('oot-button smallbtnicon');
                $('#ProcessGroupItem').addClass('oot-button smallbtnicon oot-button-gray');
                $('#ProcessGroupItem').attr('disabled',true);
                $('.head').text("@OrderResx.CreateProcessGroup");
                $('#users-table').hide();
            }
            hideLoadingSpinner();
            $('#status').val(1);
        });
        $('#reset-button').on('click', function () {
            window.location.reload();
        });             
        var config = {
            '.chosen-select-width': { width: "75%" }
        }
        for (var selector in config) {
            $(selector).chosen(config[selector]);
        }
        function AddProcessGroupItem(e) {
           e.preventDefault();
           validate=false;
           var table = $('#users-table').DataTable();
           rowid=table.data().count();
           rowid=rowid+1;
           table.row.add({
                "processname": '<input type="hidden" id="proid_' + rowid + '" /><input list="processid" class="processid" style= "width:fit-content" autocomplete = "off" class="form-control padding-label" id = "Txt_processid_' + rowid + '" name = "Txt_processid" onchange = "return ProcessChange(' + rowid + ')" multiple /><datalist id="processid_' + rowid + '"></datalist>',
                "runsequenceid": '<input type="text" class="form-control" id="runsequenceid_' + rowid + '" autocomplete="off" onkeypress="return isNumber(event)" />',
                "status": "<select id='status_" + rowid + "' name='status' class= 'form-control' style='width: 150px'><option value='1'>@OrderResx.Active</option><option value='0'>@OrderResx.InActive</option></select>",
                "createddate": "",
                "createdby": "",
                "edit": "<button class='oot-button smallbtnicon' title='Edit Process Group Items' onclick='return SaveProcessGroupItems_Click(" + rowid + "," + groupid + ",0,event)><i class='fa-solid fa-pen'></i></a>",
                "delete": "<button class='oot-button smallbtnicon' title='Delete Process Group Items' onclick='return DeleteProcessGroupItems_Click(" + rowid + ", event)><i class='fa-solid fa-trash></i></a>"
            }).draw();
        }
        function isNumber(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        }
        function ViewProcessGroupDetails(id) {
            validate=true;
            $.ajax({
                type: 'GET',
                url: '/api/Processor/GetProcessGroupRecord?Id=' + parseInt(id),
                data: '{}',
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function (response) {
                    if (response != null) {
                        groupid = response.data[0].processgroupid;
                        $('#Txt_Name').val(response.data[0].name.trim());
                        $('#Txt_Description').val(response.data[0].description);
                        $('#status').val(response.data[0].status);
                        loadProcessTableByGroupId("/api/Processor/ProcessDatabyProcessGroupId?Id="+ groupid);
                    }
                }
            });
            return false;
        }
        function validate_form () {
            toastr.clear();
            valid = true;
            if ($('#Txt_Name').val() == "") {
                toastr.success("@OrderResx.EnterName","");
                $('#Txt_Name').focus();
                valid = false;
                return false;
            }
            SaveProcessGroup();
        }
        function SaveProcessGroup() {
            toastr.clear();
            var username = '@Context.Session.GetString("FirstName")' + ' ' + '@Context.Session.GetString("LastName")';
            var currentdate = new Date();
            var datetime = currentdate.getFullYear() + "-"
                + (currentdate.getMonth() + 1) + "-"
                + currentdate.getDate() + " "
                + currentdate.getHours() + ":"
                + currentdate.getMinutes() + ":"
                + currentdate.getSeconds() + "."
                + currentdate.getMilliseconds();
            var model = [];
            var data = {};
            data.processgroupid = groupid.toString();
            data.name =$.trim($('#Txt_Name').val());
            data.description = $.trim($('#Txt_Description').val());
            data.status = $.trim($('#status').val());
            data.createdby = username;
            data.createddate=datetime;
            model.push(data);
            var processgroup = JSON.stringify(model);
            $.ajax({
                type: 'POST',
                url: '/api/Processor/SaveProcessGroup',
                data: processgroup,
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function (response) {
                    if (response[0].result == "@OrderResx.Success") {
                        window.location = "/Processor/ProcessGroup";
                    }
                    else if (response[0].result == "@OrderResx.AlreadyExisting") {
                        hideLoadingSpinner();
                        toastr.warning("@OrderResx.AlreadyExistingPriceGroupName", "");
                        return false;
                    }
                    else {
                        hideLoadingSpinner();
                        toastr.warning("@OrderResx.Somethingwentwrong","");
                        return false;
                    }
                },
                error: function (response) {
                    toastr.warning("@OrderResx.erroroccured", "");
                }
            });
            return false;
        }
        function GetProcess() {
            $.ajax({
                type: "GET",
                url: "/api/Processor/GetProcessDataActive",
                contentType: "application/json;charset=utf-8",
                data: "{}",
                contentType: "json",
                async: false,
                success: function (response) {
                    $('#processid').children().remove();
                    if (response.data[0] != null) {
                        process = response.data;
                        $.each(process, function (key, value) {
                            $('#processid').append('option value=' + value.processname.split('-')[1] + '></option>');
                        });
                        ViewProcessGroupDetails(groupid);
                    }
                }
            });
            return false;
        }
        function ProcessChange(processgroupitemid) {
            var valuecheck = false;
            if ($('#Txt_processid').val() != "") {
            $.each(process, function (key, value) {
                if (value.processname.split('-')[1] == $.trim($('#Txt_processid_' + processgroupitemid).val())) {
                    $('#proid_'+processgroupitemid).val(value.processname.split('-')[0]);
                    valuecheck = true;
                }
            });          
            if (valuecheck == false) {
                toastr.warning("@OrderResx.processnamenotexist");
                $('#Txt_processid_' + processgroupitemid).val("");
                $('#proid_'+processgroupitemid).val("");
                $('#Txt_processid_' + processgroupitemid).focus();
                return false;
            }
          }
          else {
                toastr.warning("@OrderResx.EnterProcessName");
                $('#Txt_processid_' + processgroupitemid).val("");
                $('#proid_' + processgroupitemid).val("");
                $('#Txt_processid_' + processgroupitemid).focus();
                return false;
          }
        }
        function loadProcessTableByGroupId(e) {
            var index = 0,rowid=0;
            showLoadingSpinner();
            var table=$('#users-table').DataTable();
            if(validate==true) {
                rowid=0;
            }
            var table=$('#users-table').DataTable({
                language: {
                    search: '<div class="pl-2"><small>@OrderResx.SearchText</small></div>',
                    searchPlaceholder: "@OrderResx.TypeAnything",
                    lengthMenu: "<div><small>@OrderResx.Showentries</small></div> _MENU_"
                },
                dom: "<'buttons-top'<'pull-left d-flex'<'mr-2'f><l>><'excel'B>>rt<'bottom'ip>",
                destroy: true,
                processing: true,
                ordering: false,
                paging: true,
                "fnInitComplete": function () {
                    this.api().columns().every(function () {
                        var that = this;
                        $('input', this.header()).on('keyup change clear', function () {
                            if (that.search() !== this.value) {
                                that.search(this.value, false, false).draw();
                            }
                        });
                    });
                },
                buttons: [
                ],
                pagingType: "full_numbers",
                searching: true,
                lengthMenu: [
                    [10, 25, 50, -1],
                    [10, 25, 50, 'All'],
                ],
                ajax: e ? e : "ProcessDatabyProcessGroupId",
                "columnDefs": [
                    { "className": "UsersAdminFilter-dt-left", "targets": "_all" },
                ],
                columns: [
                    {
                        data: "processname", render: function (data, type, row) {
                            var processname="";
                            if(validate==true) {
                            if(row.processname!="") {
                               rowid=rowid+1;
                               processname += '<input type="hidden" id="proid_' + rowid + '" value=' + row.processid + '/><input list = "processid" style = "width:fit-content" autocomplete = "off" class="form-control padding-label" id="Txt_processid_' + rowid + '" value="' + row.processname + '" name = "Txt_processid" onchange = "return ProcessChange(' + rowid + ')" multiple /><datalist id="processid">';
                               $.each(process, function (key, value) {
                                processname +='<option value=' + value.processname.split('-')[1] + '></option>';
                               });
                               processname +="</datalist>";
                               return processname;
                            }
                          }
                          else {
                               var table = $('#users-table').DataTable();
                               rowid=table.data().count()-1;
                               rowid=rowid+1;
                               processname += '<input type="hidden" id="proid_' + rowid + '" /><input list = "processid" style = "width:fit-content" autocomplete = "off" class="form-control padding-label" id="Txt_processid_' + rowid + '" name = "Txt_processid" onchange = "return ProcessChange(' + rowid + ')" multiple /><datalist id="processid">';
                               $.each(process, function (key, value) {
                                processname +='<option value=' + value.processname.split('-')[1] + '></option>';
                               });
                               processname +="</datalist>";
                               return processname;
                          }
                        }
                    },
                    {
                        data: "runsequenceid", render: function (data, type, row) {
                            if(validate==true) {
                            if(row.runsequenceid!=0) {
                               return '<input type="text" class="form-control" id="runsequenceid_' + rowid + '" value=' + row.runsequenceid + ' autocomplete="off" onkeypress="return isNumber(event)" />';
                            }
                          }
                          else {
                               var table = $('#users-table').DataTable();
                               rowid=table.data().count()-1;
                               rowid=rowid+1;
                               return '<input type="text" class="form-control" id="runsequenceid_' + rowid + '" autocomplete="off" onkeypress="return isNumber(event)" />';
                          }
                        }
                    },
                    {
                        data: "status", render: function (data, type, row) {
                         if(validate==true) {
                            if(row.status!="") {   
                                if(row.status=="@OrderResx.Active") {
                                  return '<select id="status_' + rowid + '" name = "status" class= "form-control" style = "width:150px"><option value="1" selected> @OrderResx.Active</option><option value="0"> @OrderResx.InActive</option></select>';
                                }
                                else {
                                  return '<select id="status_' + rowid + '" name = "status" class= "form-control" style = "width:150px"><option value="1"> @OrderResx.Active</option><option value="0" selected> @OrderResx.InActive</option></select>';
                                }
                              } 
                           }
                           else {
                              var table = $('#users-table').DataTable();
                              rowid=table.data().count()-1;
                              rowid=rowid+1;
                              return '<select id="status_' + rowid + '" name = "status" class= "form-control" style = "width:150px"><option value="1"> @OrderResx.Active</option><option value="0"> @OrderResx.InActive</option></select>';
                           }
                       }
                    },
                    {
                        data: "createddate", render: function (data, type, row) {
                          if(validate==true) {
                            if(row.createddate!="") {
                              if (row.createddate == "@OrderResx.datelabel") {
                                return "";
                              }
                              else {
                                  return "<label id='lblCreatedDate' style='width:150px;'>" + row.createddate + "</label>";
                              }
                            }
                            else {
                                    return "";
                            }
                          }
                          else {
                               return "";
                          }
                       }
                    },
                    {
                        data: "createdby", render: function (data, type, row) {
                         if (validate==true) {
                          if(row.createdby!="") {
                             return "<label id='lblCreatedBy' style='width:150px;'>" + row.createdby + "</label>";   
                          }
                          else {
                              return "";
                          }
                        }
                        else {
                              return "";
                          }
                       }
                    },  
                    {
                        data: null, render: function (data, type, row) {
                          if(validate==true) {
                            if(row.processgroupitemid!=0) {
                                return '<button class="oot-button smallbtnicon oot-button-gray" title="Save Process Group Items" style="background-color: #dcddde" onclick="return SaveProcessGroupItems_Click(' + rowid + ',' + row.processgroupid + ',' + row.processid + ',event)"  disabled><i class="fa-solid fa-save"></i></a>';                           
                            }
                          }
                          else {
                               var table = $('#users-table').DataTable();
                               rowid=table.data().count()-1;
                               rowid=rowid+1;
                                if (userrole == "@OrderResx.Admin") {
                                   return '<button class="oot-button smallbtnicon" title="Save Process Group Items" onclick="return SaveProcessGroupItems_Click(' + rowid + ',' + groupid + ',0,event)"><i class="fa-solid fa-save"></i></a>';
                                }
                                else {
                                    return '<button class="oot-button smallbtnicon oot-button-gray" title="Save Process Group Items" style="background-color: #dcddde" onclick="return SaveProcessGroupItems_Click(' + rowid + ',' + groupid + ',0,event)" disabled><i class="fa-solid fa-save"></i></a>';
                                }
                          }
                       }
                    },
                    {
                        data: null, render: function (data, type, row) {
                           if(validate==true) {
                            if(row.processgroupitemid!=0) {
                              if (userrole == "@OrderResx.Admin") {
                                return '<button class="oot-button smallbtnicon" title="Edit Process Group Items" onclick="return EditProcessGroupItems_Click(' + rowid + ',' + row.processgroupid + ',' + row.processid + ',' + row.processgroupitemid + ',event)"><i class="fa-solid fa-pen"></i></a>';
                              }
                              else {
                                return '<button class="oot-button smallbtnicon oot-button-gray" title="Edit Process Group Items" style="background-color: #dcddde" onclick="return EditProcessGroupItems_Click(' + rowid + ',' + row.processgroupid + ',' + row.processid + ',' + row.processgroupitemid + ',event)" disabled><i class="fa-solid fa-pen"></i></a>';
                              }
                            }
                        }
                        else {
                             var table = $('#users-table').DataTable();
                               rowid=table.data().count()-1;
                               rowid=rowid+1;
                                return '<button class="oot-button smallbtnicon oot-button-gray" title="Edit Process Group Items" style="background-color: #dcddde" onclick="return EditProcessGroupItems_Click(' + rowid + ',' + groupid + ',0,0,event)" disabled><i class="fa-solid fa-pen"></i></a>';
                        }
                      }
                    },
                    {
                        data: null, render: function (data, type, row) {
                          if(validate==true) {
                            if (row.processgroupitemid != 0) {
                              if (userrole == "@OrderResx.Admin") {
                                return '<button class="oot-button smallbtnicon" title="Delete Process Group Items" onclick="return DeleteProcessGroupItems_Click(' + row.processgroupitemid + ',event)"><i class="fa-solid fa-trash"></i></a>';
                              }
                              else {
                                return '<button class="oot-button smallbtnicon oot-button-gray" title="Delete Process Group Items" style="background-color: #dcddde" onclick="return DeleteProcessGroupItems_Click(' + row.processgroupitemid + ',event)" disabled><i class="fa-solid fa-trash"></i></a>';
                              }
                            }
                        }
                        else {
                                var table = $('#users-table').DataTable();
                                rowid = table.data().count()-1;
                                rowid = rowid + 1;
                                return '<button class="oot-button smallbtnicon oot-button-gray" title="Delete Process Group Items" style="background-color: #dcddde" onclick="return DeleteProcessGroupItems_Click(' + rowid + ',0,event)" disabled><i class="fa-solid fa-trash"></i></a>';
                        }
                      }
                    }
                ]
            });
            hideLoadingSpinner();
        }
        function BtnBack_Click() {
            window.location = "/Processor/ProcessGroup";
        }
        function SaveProcessGroupItems_Click(rowid,processgroupid,processid,e) {
            e.preventDefault();
            SaveProcessGroupItems(rowid, processgroupid, processid,0,"@OrderResx.Save");
        }
        function EditProcessGroupItems_Click(rowid,processgroupid,processid,processgroupitemid,e) {
            e.preventDefault();
            SaveProcessGroupItems(rowid, processgroupid, processid,processgroupitemid,"@OrderResx.EditBatch");
        }
        function SaveProcessGroupItems(rowid,processgroupid,processid,processgroupitemid,action) {
            toastr.clear();
            showLoadingSpinner();
            if ($('#Txt_processid_' + rowid).val() == "") {
                toastr.warning("@OrderResx.EnterProcessName", "");
                $('#Txt_processgroupid_'+rowid).focus();
                return false;
            }
            if ($('#runsequenceid_' + rowid).val() == "") {
                toastr.warning("@OrderResx.EnterRunSequenceId", "");
                $('#runsequenceid_'+rowid).focus();
                return false;
            }
            var username = '@Context.Session.GetString("FirstName")' + ' ' + '@Context.Session.GetString("LastName")';
            var currentdate = new Date();
            var datetime = currentdate.getFullYear() + "-"
                + (currentdate.getMonth() + 1) + "-"
                + currentdate.getDate() + " "
                + currentdate.getHours() + ":"
                + currentdate.getMinutes() + ":"
                + currentdate.getSeconds() + "."
                + currentdate.getMilliseconds();
            var model = [];
            var data = {};
            if(action=="@OrderResx.EditBatch") {
              data.processgroupitemid=processgroupitemid;
            }
            else {
              data.processgroupitemid=0;
            }
            data.processgroupid = processgroupid;
            data.processid = parseInt($('#proid_' + rowid).val());
            data.runsequenceid=parseInt($('#runsequenceid_' + rowid).val());
            data.status = $('#status_' + rowid).val();
            data.createdby = username;
            data.createddate = datetime;
            model.push(data);
            var groupitems = JSON.stringify(model);
            $.ajax({
                type: 'POST',
                url: '/api/Processor/SaveProcessGroupItems',
                data: groupitems,
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function (response) {
                    if (response[0].result == "@OrderResx.Success") {
                        if(action=="@OrderResx.Save") {
                           toastr.success("@OrderResx.DataSavedSuccessfully");
                        }
                        else {
                           toastr.success("@OrderResx.DataUpdatedSuccessfully");
                        }
                        validate=true;
                        loadProcessTableByGroupId("/api/Processor/ProcessDatabyProcessGroupId?Id="+ groupid);
                        hideLoadingSpinner();
                    }
                    else if(response[0].result="@OrderResx.AlreadyExistingRunSequenceId") {
                        hideLoadingSpinner();
                        toastr.warning("@OrderResx.AlreadyExistingRunSequenceId", "");
                        return false;
                    }
                    else if (response[0].result == "@OrderResx.AlreadyExisting") {
                        hideLoadingSpinner();
                        toastr.warning("@OrderResx.AlreadyExistingRecord", "");
                        return false;
                    }
                    else {
                        hideLoadingSpinner();
                        toastr.warning("@OrderResx.Somethingwentwrong", "");
                        return false;
                    }
                },
                error: function (response) {
                    toastr.warning("@OrderResx.erroroccured", "");
                }
            });
            return false;
        }
        function DeleteProcessGroupItems_Click(processgroupitemid,e) {
            e.preventDefault();
            var message ="@OrderResx.Areyousurewantodeletethisrecord";
            toastr.success("<br /><button type='button' value='yes' id='confirmationButtonYes' class='btnstyle' style='width:50px;background-color:#00a8e1;color:#fff'>Yes</button>&nbsp;&nbsp;<button type='button' value='no' class='btnstyle' style='width:50px;background-color:#00a8e1;color:#fff'>No</button>", message, {
                closeButton: false,
                allowHtml: true,
                onShown: function (toast) {
                    $("#confirmationButtonYes").click(function () {
                        toastr.clear();
                        showLoadingSpinner();
                        $.ajax({
                            type: "GET",
                            url: "/api/Processor/DeleteProcessGroupItems?Id=" + processgroupitemid,
                            contentType: "application/json;charset=utf-8",
                            data: "{}",
                            contentType: "json",
                            async: true,
                            success: function (response) {
                                if (response == "@OrderResx.Success") {
                                    validate = true;
                                    loadProcessTableByGroupId("/api/Processor/ProcessDatabyProcessGroupId?Id="+ groupid);
                                    hideLoadingSpinner();
                                }
                                else {
                                    toastr.clear();
                                    hideLoadingSpinner();
                                    toastr.warning("@OrderResx.Somethingwentwrong", "");
                                    return false;
                                }
                            }
                        });
                        return false;
                    });
                }
            });
        }
    </script>
}
