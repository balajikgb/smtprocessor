@model ArasPLMWebAp.Models.CreateRunControlPageClass

@using Core.Services
@using Core.Enums
@using ProcessorWebApp.Resources;
@using Microsoft.AspNetCore.Http;
@{
    var env = ViewContext.RouteData.Values[ArasPLMWebAp.Constants.Constants.environmentStr];
}
<style>
    .required::after 
{
    content: "*";
    font-weight: bold;
    color: red; 
}
</style>
<div class="user-reg">
    <div><h4 class="head"></h4></div>
    <form onsubmit="return validate_form()">
        @Html.AntiForgeryToken()
        <br />

         <div class="d-flex form-group align-items-center m-2">
            <label class="control-label required">@OrderResx.ProcessGroupID</label>
            <input type="hidden" id="groupid" />
            <input list="processgroupid" style="width:fit-content;" autocomplete="off" class='form-control padding-label' id='Txt_processgroupid' name='Txt_processgroupid' onchange="return ProcessGroupChange()" multiple />
            <datalist id="processgroupid">
            </datalist>  
        </div>
        <div class="d-flex form-group align-items-center m-2">
            <label class="control-label required">@OrderResx.ProcessIdTitle</label>
            <input type="hidden" id="proid" />
            <input list="processid" style="width:fit-content;" autocomplete="off" class='form-control padding-label' id='Txt_processid' name='Txt_processid' onchange="return ProcessChange()" multiple />
            <datalist id="processid">
            </datalist>
        </div>

        <div class="d-flex form-group align-items-center m-2">
            <label class="control-label">@OrderResx.Status</label>
            <select id="status" name="status" class="form-control" style="width:150px">
                <option value="1">@OrderResx.Active</option>
                <option value="0">@OrderResx.InActive</option>
            </select>
        </div>

        <div class="d-flex form-group align-items-center m-2">
            <input type="hidden" id="sid" />
            <label class="control-label required">@OrderResx.ServerID</label>
            <input list="serverid" style="width:fit-content;" autocomplete="off" class='form-control padding-label' id='Txt_serverid' name='Txt_serverid' onchange="return ServerChange()" multiple />
            <datalist id="serverid">
            </datalist>
        </div>

    </form>
       
        <br><br>


    <div class="d-flex justify-content-left">
        <button class="oot-button m-4" id="back-button" type="button" onclick="BtnBack_Click()">@OrderResx.Back</button>
        <button class="oot-button m-4" type="submit" onclick="return validate_form()">@OrderResx.Ok</button>
    </div>
   
        </div>

@section Scripts
{
    <script>
        var id=0;
        var process,processgroup,server;
        $(function () {
            $('#Txt_Name').focus();
            $('#environments').val('@env');
            const params = new URLSearchParams(window.location.search)
            for (const param of params) {
                id = param[1].trim();
            }
            GetProcessGroup();
            GetServers();
            if (id != 0) {
                $('.head').text("@OrderResx.EditRunControlPage");
                ViewRunControlPageDetails(id);
            }
            else {
                $('.head').text("@OrderResx.CreateRunControlPage");
            }
            hideLoadingSpinner();
            $('#status').val(1);
        });
        $('#reset-button').on('click', function () {
            window.location.reload();
        });
        var config = {
            '.chosen-select-width': { width: "75%" }
        }
        for (var selector in config) {
            $(selector).chosen(config[selector]);
        }
        function GetProcessGroup() {
            $.ajax({
                type: "GET",
                url: "/api/Processor/GetProcessGroupDataActive",
                contentType: "application/json;charset=utf-8",
                data: "{}",
                contentType: "json",
                async: false,
                success: function (response) {
                    $('#processgroupid').children().remove();
                    if (response != null) {
                        processgroup = response.data;
                        for (var i = 0; i < response.data.length; i++) {
                            $('#processgroupid').append("<option value='" + response.data[i].processgroupname.split('-')[1] + "'></option>");
                        }
                    }
                }
            });
            return false;
        }
        function ProcessGroupChange() {
           var valuecheck=false;
           if ($('#Txt_processgroupid').val()!="") {
            $.each(processgroup, function (key, value) {
                if (value.processgroupname.split('-')[1] == $.trim($('#Txt_processgroupid').val())) {
                    $('#groupid').val(value.processgroupname.split('-')[0]);
                    valuecheck=true;                
                }
           });
           if(valuecheck==false) {
                toastr.warning("@OrderResx.processgroupnamenotexist");
                $('#processid').children().remove();
                $('#proid').val("");
                $('#Txt_processid').val("");
                $('#Txt_processgroupid').val("");
                $('#groupid').val("");
                $('#Txt_processgroupid').focus();
                return false;
           }
          }
          else {
              toastr.warning("@OrderResx.EnterProcessGroupName");
              $('#processid').children().remove();
              $('#proid').val("");
              $('#Txt_processid').val("");
              $('#Txt_processgroupid').val("");
              $('#groupid').val("");
              $('#Txt_processgroupid').focus();
              return false;
          }
          GetProcess();
        }
        function GetProcess() {
            $.ajax({
                type: "GET",
                url: "/api/Processor/GetProcessDataByProcessGroupId?Id=" + parseInt($('#groupid').val()),
                contentType: "application/json;charset=utf-8",
                data: "{}",
                contentType: "json",
                async: false,
                success: function (response) {
                    $('#processid').children().remove();
                    if (response.data[0] != null) {
                        process = response.data;
                        for (var i = 0; i < response.data.length; i++) {
                            $('#processid').append("<option value='" + response.data[i].processname.split('-')[1] + "'></option>");
                        }
                    }
                }
            });
            return false;          
        }
       function ProcessChange() {
            if ($('#Txt_processgroupid').val() =="") {
                $('#Txt_processgroupid').val("");
                toastr.warning("@OrderResx.EnterProcessGroupName");
                $('#Txt_processgroupid').val("");
                $('#groupid').val("");
                $('#Txt_processgroupid').focus();
                return false;
            }
            var valuecheck = false;
            if ($('#Txt_processid').val() != "") {
            $.each(process, function (key, value) {
                if (value.processname.split('-')[1] == $.trim($('#Txt_processid').val())) {
                    $('#proid').val(value.processname.split('-')[0]);
                    valuecheck = true;
                }
            });
            if (valuecheck == false) {
                toastr.warning("@OrderResx.processnamenotexist");
                $('#Txt_processgroupid').val("");
                $('#Txt_processid').val("");
                $('#proid').val("");
                $('#Txt_processid').focus();
                return false;
            }
          }
          else {
                toastr.warning("@OrderResx.EnterProcessName");
                $('#Txt_processid').val("");
                $('#proid').val("");
                $('#Txt_processid').focus();
                return false;
          }
        }
        function GetServers() {
            $.ajax({
                type: "GET",
                url: "/api/Processor/GetServersDataActive",
                contentType: "application/json;charset=utf-8",
                data: "{}",
                contentType: "json",
                async: false,
                success: function (response) {
                    $('#serverid').children().remove();
                    if (response.data[0] != null) {
                        server = response.data;
                        for (var i = 0; i < response.data.length; i++) {
                            $('#serverid').append("<option value='" + response.data[i].servernames.split('-')[1] + "'></option>");
                        }
                    }
                }
            });
            return false;
        }
        function ServerChange() {
            var valuecheck = false;
            if ($('#Txt_serverid').val() != "") {
            $.each(server, function (key, value) {
                if (value.servernames.split('-')[1] == $.trim($('#Txt_serverid').val())) {
                    $('#sid').val(value.servernames.split('-')[0]);
                    valuecheck = true;
                }
            });
            if (valuecheck == false) {
                toastr.warning("@OrderResx.servernamenotexist");
                $('#Txt_serverid').val("");
                $('#sid').val("");
                $('#Txt_serverid').focus();
                return false;
            }
          }
          else {
                toastr.warning("@OrderResx.EnterServerName");
                $('#Txt_serverid').val("");
                $('#sid').val("");
                $('#Txt_serverid').focus();
                return false;
          }
        }
        function ViewRunControlPageDetails(id) {
            $.ajax({
                type: 'GET',
                url: '/api/Processor/GetRunControlPageRecord?Id=' + parseInt(id),
                data: '{}',
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function (response) {
                    if (response != null) {
                        id = response.data[0].runid;
                        $('#groupid').val(response.data[0].processgroupid);
                        $('#Txt_processgroupid').val(response.data[0].processgroupname);
                        $('#proid').val(response.data[0].processid);
                        $('#Txt_processid').val(response.data[0].processname);
                        $('#status').val(response.data[0].status);
                        $('#sid').val(response.data[0].serverid);
                        $('#Txt_serverid').val(response.data[0].servername);
                    }
                }
            });
            return false;
        }
        function validate_form () {
            toastr.clear();
            valid = true;
            if ($('#Txt_processgroupid').val() == "") {
                toastr.success("@OrderResx.EnterProcessGroupName","");
                $('#Txt_processgroupid').focus();
                valid = false;
                return false;
            }
            if ($('#Txt_processid').val() == "") {
                toastr.success("@OrderResx.EnterProcessName", "");
                $('#Txt_processid').focus();
                valid = false;
                return false;
            }
            if ($('#Txt_serverid').val() == "") {
                toastr.success("@OrderResx.EnterServerName", "");
                $('#Txt_serverid').focus();
                valid = false;
                return false;
            }
            SaveRunControlPage();
        }
        function SaveRunControlPage() {
            toastr.clear();
            var username = '@Context.Session.GetString("FirstName")' + ' ' + '@Context.Session.GetString("LastName")';
            var currentdate = new Date();
            var datetime = currentdate.getFullYear() + "-"
                + (currentdate.getMonth() + 1) + "-"
                + currentdate.getDate() + " "
                + currentdate.getHours() + ":"
                + currentdate.getMinutes() + ":"
                + currentdate.getSeconds() + "."
                + currentdate.getMilliseconds();
            var model = [];
            var data = {};
            data.runid = id.toString();
            data.processgroupid=$('#groupid').val();
            data.processid=$('#proid').val();
            data.status = $.trim($('#status').val());
            data.serverid=$('#sid').val();
            data.runby = username;
            data.rundttm=datetime;
            model.push(data);
            var runcontrol = JSON.stringify(model);
            $.ajax({
                type: 'POST',
                url: '/api/Processor/SaveRunControlPage',
                data: runcontrol,
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function (response) {
                    if (response[0].result == "@OrderResx.Success") {
                        window.location = "/Processor/RunControlPage";
                    }
                    else if (response[0].result == "@OrderResx.AlreadyExisting") {
                        hideLoadingSpinner();
                        toastr.warning("@OrderResx.AlreadyExistingRecord", "");
                        return false;
                    }
                    else {
                        hideLoadingSpinner();
                        toastr.warning("@OrderResx.Somethingwentwrong","");
                        return false;
                    }
                },
                error: function (response) {
                    toastr.warning("@OrderResx.erroroccured", "");
                }
            });
            return false;
        }
        function BtnBack_Click() {
            window.location = "/Processor/RunControlPage";
        }
    </script>
}
