@model Core.DataModels.UserRegistration
@using Core.Enums
@using System
@using Core.Services
@{
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
    ViewBag.Title = "User Registration";
}
<div class="user-reg">
    <div><h4 class="head">User Registration</h4></div>
    <form asp-action="RegUser" class="personal-page-form ng-invalid ng-dirty ng-touched">
        @Html.AntiForgeryToken()
        @*@Html.ValidationSummary(false, "", new { @class = "text-danger" })*@
        <div class="d-flex form-group align-items-center m-2">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", required = true } })
            <span class="asterisk">*</span>
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>

        <div class="d-flex align-items-center m-2">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", required = true } })
            <span class="asterisk">*</span>
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>

        <div class="d-flex align-items-center m-2">
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control", required = true } })
            <span class="asterisk">*</span>
            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
        </div>

        <div class="d-flex align-items-center m-2">
            @Html.LabelFor(model => model.CompanyAddres, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.CompanyAddres, new { htmlAttributes = new { @class = "form-control", required = true } })
            <span class="asterisk">*</span>
            @Html.ValidationMessageFor(model => model.CompanyAddres, "", new { @class = "text-danger" })
        </div>

        <div class="d-flex align-items-center m-2">
            @Html.LabelFor(model => model.UserEmail, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control", required = true, @readonly = true } })
            <span class="asterisk">*</span>
            @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
        </div>
        <div class="d-flex align-items-center m-2">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label" })
            @Html.TextAreaFor(model => model.Comment, new { @class = "my-coment form-control" })
            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
        </div>
        @if (!User.Identity.IsAuthenticated)
        {
            <div class="d-flex align-items-center m-2">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Password,
               new { htmlAttributes = new { @class = "form-control", @id = "password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
            <div class="d-flex align-items-center m-2">
                @Html.LabelFor(model => model.ApprovePassword, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.ApprovePassword, new { htmlAttributes = new { @class = "form-control", @id = "approve-password" } })
                @Html.ValidationMessageFor(model => model.ApprovePassword, "", new { @class = "text-danger" })
            </div>
        }
        <div class="d-flex justify-content-center">
            <button class="oot-button m-4" id="reset-button" type="button">Reset</button>
            <button class="oot-button m-4" type="submit">Ok</button>
        </div>
    </form>
</div>

@section Scripts
{
    <script>
        $('#reset-button').on('click', function () {
            $('input, textarea').val('');
            $('#Market, #UserType').val('-- Select --');
        });
    </script>
}
